// Code generated by MockGen. DO NOT EDIT.
// Source: credhub.go

// Package mocks is a generated GoMock package.
package mocks

import (
	credentials "code.cloudfoundry.org/credhub-cli/credhub/credentials"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCredHub is a mock of CredHub interface
type MockCredHub struct {
	ctrl     *gomock.Controller
	recorder *MockCredHubMockRecorder
}

// MockCredHubMockRecorder is the mock recorder for MockCredHub
type MockCredHubMockRecorder struct {
	mock *MockCredHub
}

// NewMockCredHub creates a new mock instance
func NewMockCredHub(ctrl *gomock.Controller) *MockCredHub {
	mock := &MockCredHub{ctrl: ctrl}
	mock.recorder = &MockCredHubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCredHub) EXPECT() *MockCredHubMockRecorder {
	return m.recorder
}

// GetLatestVersion mocks base method
func (m *MockCredHub) GetLatestVersion(arg0 string) (credentials.Credential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestVersion", arg0)
	ret0, _ := ret[0].(credentials.Credential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestVersion indicates an expected call of GetLatestVersion
func (mr *MockCredHubMockRecorder) GetLatestVersion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestVersion", reflect.TypeOf((*MockCredHub)(nil).GetLatestVersion), arg0)
}

// GetById mocks base method
func (m *MockCredHub) GetById(arg0 string) (credentials.Credential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0)
	ret0, _ := ret[0].(credentials.Credential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById
func (mr *MockCredHubMockRecorder) GetById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockCredHub)(nil).GetById), arg0)
}
